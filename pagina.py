# Form implementation generated from reading ui file 'C:\Users\sofia\OneDrive\Documents\Uni_Lily\Proyecto\pagina.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

from asyncio.windows_events import NULL
from datetime import datetime

import numpy as np
import pyodbc
import sys  
from agregar import Ui_MainWindow1
from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtCore import Qt


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1205, 781)
        MainWindow.setStyleSheet("background-color: rgb(255, 252, 147);\n"
"font: 75 8pt \"MS Shell Dlg 2\";")
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 0, 1211, 101))
        self.label.setStyleSheet("background-color: rgb(170, 0, 255);\n"
"font: 75 8pt \"MS Shell Dlg 2\";\n"
"font: 16pt \"MV Boli\";")
        self.label.setObjectName("label")
        self.Placa = QtWidgets.QPushButton(parent=self.centralwidget)
        self.Placa.setGeometry(QtCore.QRect(840, 190, 321, 161))
        self.Placa.setStyleSheet("background-color: rgb(163, 163, 163);\n"
"image: url(:/cct/placa.png);\n"
"")
        self.Placa.setText("")
        self.Placa.setObjectName("Placa")
        self.placas_texto = QtWidgets.QLabel(parent=self.centralwidget)
        self.placas_texto.setGeometry(QtCore.QRect(110, 390, 261, 51))
        self.placas_texto.setStyleSheet("font: 10pt \"MS Shell Dlg 2\";\n"
"")
        self.placas_texto.setText("")
        self.placas_texto.setObjectName("placas_texto")
        self.label_3 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(210, 130, 211, 41))
        self.label_3.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";\n"
"")
        self.label_3.setWordWrap(False)
        self.label_3.setObjectName("label_3")
        self.imagen = QtWidgets.QPushButton(parent=self.centralwidget)
        self.imagen.setGeometry(QtCore.QRect(160, 190, 321, 161))
        self.imagen.setStyleSheet("background-color: rgb(163, 163, 163);\n"
"")
        self.imagen.setText("")
        self.imagen.setObjectName("imagen")
        self.label_4 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(530, 420, 201, 31))
        self.label_4.setStyleSheet("font: 12pt \"MS Shell Dlg 2\";")
        self.label_4.setObjectName("label_4")
        self.buscar = QtWidgets.QPushButton(parent=self.centralwidget)
        self.buscar.setGeometry(QtCore.QRect(690, 220, 93, 91))
        self.buscar.setStyleSheet("image: url(:/cct/busqueda.png);\n"
"background-color: rgb(208, 208, 208);")
        self.buscar.setText("")
        self.buscar.setObjectName("buscar")
        self.buscar.clicked.connect(self.onclick)
        self.agregar = QtWidgets.QPushButton(parent=self.centralwidget)
        self.agregar.setGeometry(QtCore.QRect(540, 220, 93, 91))
        self.agregar.setStyleSheet("image: url(:/cct/agregar.png);\n"
"background-color: rgb(208, 208, 208);")
        self.agregar.setText("")
        self.agregar.setObjectName("agregar")
        self.agregar.clicked.connect(self.abrir)
        self.tvw_tabla = QtWidgets.QTableView(parent=self.centralwidget)
        self.tvw_tabla.setGeometry(QtCore.QRect(150, 470, 1001, 241))
        self.tvw_tabla.setStyleSheet("background-color: rgb(230, 196, 250);\n"
"border-color: rgb(230, 196, 250);")
        self.tvw_tabla.setObjectName("tvw_tabla")
        self._modelo = TableModel(["Id_peersona" , "Nombre" , "Apellido_pa" , "Apellido_ma" , "Pacas" , "Imagen" , "Marca" , "Modelo" , "Descripcion" , "Direccion" , "Telefono" , "Cp" , "Fecha"])
        self._modelo.layoutChanged.emit()
        self.tvw_tabla.setModel(self._modelo)
        MainWindow.setCentralWidget(self.centralwidget)
        self.label_5 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(920, 130, 131, 41))
        self.label_5.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";\n"
"border-color: rgb(212, 209, 122);\n"
"")
        self.label_5.setWordWrap(False)
        self.label_5.setObjectName("label_5")
        self.label_2 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(0, 100, 111, 681))
        self.label_2.setStyleSheet("background-color: rgb(170, 0, 255);\n"
"font: 75 8pt \"MS Shell Dlg 2\";\n"
"font: 16pt \"MV Boli\";")
        self.label_2.setObjectName("label_2")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def onclick(self):
        try:
            user='Sofia';
            password='abc';
            host='SOFIA';
            database='lili';
            self.con1= pyodbc.connect('DRIVER={ODBC Driver 17 for SQL Server};SERVER='+ host + ';DATABASE='+database + ';UID='+user + ';PWD='+password)
                
            self.cursor = self.con1.cursor()
            now= datetime.now()  #Variable que contiene la fecha del dia de hoy
                
            # Se cargan los datos indicados de la tabla
            query= "SELECT Id_peersona , Nombre , Apellido_pa , Apellido_ma , Placas , Imagen , Marca , Modelo , Descripcion , Direccion , Telefono , Cp , Fecha  fecha FROM Problema"
            self.cursor.execute(query)
            result = self.cursor.fetchall() 
                
            print("Sofia conecta")
                                
            print("query " + query)
                
            # Se agregan los elementos al QListWidget
            for i in result:
                self.Id_peersona = str(i[0])
                self.Nombre = str(i[1])
                self.Apellido_pa = str(i[2])
                self.Apellido_ma = str(i[3])
                self.Placas = str(i[4])
                self.Imagen = str(i[5])
                self.Marca = str(i[6])
                self.Modelo = str(i[7])
                self.Descripcion = str(i[8])
                self.Direccion = str(i[9])
                self.Telefono = str(i[10])
                self.Cp = str(i[11])
                self.Fecha = str(i[12])
                self._modelo.Table.append([self.Id_peersona , self.Nombre , self.Apellido_pa , self.Apellido_ma , self.Placas , self.Imagen , self.Marca , self.Modelo , self.Descripcion , self.Direccion , self.Telefono , self.Cp , self.Fecha ])
                self._modelo.layoutChanged.emit()
                self.tvw_tabla.setModel(self._modelo)
                        
            self.con1.commit()
                
        except Exception as e:
            print ("Ocurrio un error al conectar a SQL server: ", e)
            self.con1.close()
        finally: 
            self.cursor.close()
            self.con1.close()
            print("OK...Sql Connection is closed")

    def abrir (self):
        self.ventana=QtWidgets.QMainWindow()
        self.ui=Ui_MainWindow1()
        self.ui.setupUi(self.ventana)
        self.ventana.show()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:48pt; font-weight:600; color:#ffffff;\">Mostrar datos</span></p></body></html>"))
        self.Placa.setToolTip(_translate("MainWindow", "<html><head/><body><p><img src=\":/cct/placa.jpg\"/></p></body></html>"))
        self.Placa.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><img src=\":/cct/placa.jpg\"/></p></body></html>"))
        self.label_3.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; font-weight:600; color:#000000;\">Placa caragada</span></p></body></html>"))
        self.label_4.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; font-weight:600;\">Datos del due√±o</span></p></body></html>"))
        self.label_5.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; font-weight:600; color:#000000;\">Placa BD</span></p></body></html>"))
        self.label_2.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><br/></p></body></html>"))

import Placas

class TableModel(QtCore.QAbstractTableModel):
    def __init__(self, headers, table = None, parent = None):
        super(TableModel, self).__init__(parent)
        if not table:
            self._table = []
        else:
            self._table = table
        self._headers = headers

    Table = property(lambda s: s._table)

    def rowCount(self, parent = None):
        return len(self._table)

    def columnCount(self, parent = None):
        return len(self._headers)

    def data(self, index, role = Qt.ItemDataRole.DisplayRole):
        if role == Qt.ItemDataRole.DisplayRole	:
            if index.isValid():
                row = index.row()
                col = index.column()
                if 0 <= row < self.rowCount():
                    if 0 <= col < self.columnCount():
                        return self._table[row][col]

    def headerData(self, section, orientation, role = Qt.ItemDataRole.DisplayRole):
        if role != Qt.ItemDataRole.DisplayRole:
            return None
        if role == Qt.ItemDataRole.DisplayRole and orientation == Qt.Orientation.Horizontal:
            if 0 <= section < self.columnCount():
                return str(self._headers[section])
            else:
                None
        if role == Qt.ItemDataRole.DisplayRole and orientation == Qt.Orientation.Vertical:
            if len(self._table) < 1: return ""
            if 0 <= section < len(self._table):
                return str(section + 1)

    def clear(self):
        self._table = []

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
